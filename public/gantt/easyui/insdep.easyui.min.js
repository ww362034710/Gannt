
(function($) {

	"use strict";

	/*初始化语言*/
	if ($.fn.pagination){
		$.fn.pagination.defaults.beforePageText = '第';
		$.fn.pagination.defaults.afterPageText = '共 {pages} 页';
		$.fn.pagination.defaults.displayMsg = '显示 {from} 到 {to},共 {total} 记录';
	}
	if ($.fn.datagrid){
		$.fn.datagrid.defaults.loadMsg = '正在处理，请稍等。。。';
	}
	if ($.fn.treegrid && $.fn.datagrid){
		$.fn.treegrid.defaults.loadMsg = $.fn.datagrid.defaults.loadMsg;
	}
	if ($.messager){
		$.messager.defaults.ok = '确定';
		$.messager.defaults.cancel = '取消';
	}
	$.map(['validatebox','textbox','passwordbox','filebox','searchbox',
		'combo','combobox','combogrid','combotree',
		'datebox','datetimebox','numberbox',
		'spinner','numberspinner','timespinner','datetimespinner'], function(plugin){
		if ($.fn[plugin]){
			$.fn[plugin].defaults.missingMessage = '该输入项为必输项';
		}
	});
	if ($.fn.validatebox){
		$.fn.validatebox.defaults.rules.email.message = '请输入有效的电子邮件地址';
		$.fn.validatebox.defaults.rules.url.message = '请输入有效的URL地址';
		$.fn.validatebox.defaults.rules.length.message = '输入内容长度必须介于{0}和{1}之间';
		$.fn.validatebox.defaults.rules.remote.message = '请修正该字段';
	}
	if ($.fn.calendar){
		$.fn.calendar.defaults.weeks = ['日','一','二','三','四','五','六'];
		$.fn.calendar.defaults.months = ['一月','二月','三月','四月','五月','六月','七月','八月','九月','十月','十一月','十二月'];
	}
	if ($.fn.datebox){
		$.fn.datebox.defaults.currentText = '今天';
		$.fn.datebox.defaults.closeText = '关闭';
		$.fn.datebox.defaults.okText = '确定';
		$.fn.datebox.defaults.formatter = function(date){
			var y = date.getFullYear();
			var m = date.getMonth()+1;
			var d = date.getDate();
			// return y+'-'+(m<10?('0'+m):m)+'-'+(d<10?('0'+d):d);
			return y+'年'+m+'月'+d+'日';
		};
		$.fn.datebox.defaults.parser = function(s){
			if (!s) return new Date();
			// var ss = s.split('-');
			// var y = parseInt(ss[0],10);
			// var m = parseInt(ss[1],10);
			// var d = parseInt(ss[2],10);
			// if (!isNaN(y) && !isNaN(m) && !isNaN(d)){
			// 	return new Date(y,m-1,d);
			// } else {
			// 	return new Date();
			// }

			var ss = s.match("(\\d*)年(\\d*)月(\\d*)日");
			if (!ss || !ss.length) return new Date();

			var y = ss && parseInt(ss[1]),
				m = ss && parseInt(ss[2]),
				d = ss && parseInt(ss[3]);

			return new Date(y,m-1,d);
		};
	}
	if ($.fn.datetimebox && $.fn.datebox){
		$.extend($.fn.datetimebox.defaults,{
			currentText: $.fn.datebox.defaults.currentText,
			closeText: $.fn.datebox.defaults.closeText,
			okText: $.fn.datebox.defaults.okText
		});
	}
	if ($.fn.datetimespinner){
		$.fn.datetimespinner.defaults.selections = [[0,4],[5,7],[8,10],[11,13],[14,16],[17,19]]
	}



	/*EasyUI扩展 end*/
	$.insdep={
		config:{
			path:location.origin+"/static/insdep/"
		},
		ajax:function(c){
			var Loading;
			var d={
				url:"",
				async:true,//true异步请求,false同步请求,注：同步请求将锁住浏览器，用户其它操作必须等待请求完成才可以执行
				when:true,
				cache:false,
				type:"POST",
				dataType:"html",
				beforeSend:function(){
					var Message=$.insdep.plus("message",{
						type:"loading",
						content:"加载中，请稍后",
						delay:false
					});
					Message.then(function(res) {
						Loading=res;
					});
				},
				complete:function(){
					$.insdep.plus.message.destroy(Loading);
				},
				success:null,
				done:null
			};
			var n=$.extend(true,d,c);
			if(n.async){
				$.ajax(n);
			}else{
				if(n.when){
					var done=(n.success!=null?n.success:function(data){});
					$.when($.insdep.ajax_async(n)).done(done);
				}else{
					$.ajax(n);
				}
			}

		},
		ajax_async:function(c){
			var d = $.Deferred();
			var n = $.extend(true,c,{
				//async:true,
				success: function(r){
					d.resolve(r);
				}
			});
			$.ajax(n);
			return d.promise();
		},
		loader:function(c,callback){
			var c = (typeof c == 'string'?{path:c}:c);
			var d = {
						id:null,
						path:"",
						cache:false
					};
			var opts = $.extend(true,d,c);
			var type=(opts.path.replace(/.*(\/|\\)/, "").split("?")[0]).split(".").pop();
			opts.id=(opts.id==null?Math.random().toString(36).substr(3):opts.id);
			var objs=$("#"+opts.id);
			switch(type){
				case "css":
					var result=(!document.getElementById(opts.id))?$("head").append('<link '+(opts.id?'id="'+opts.id+'"':"")+' href="'+opts.path+'" rel="stylesheet" type="text/css">'):objs;
				break;
				case "js":
				default:
					var result=(!document.getElementById(opts.id))?$("head").append('<script '+(opts.id?'id="'+opts.id+'"':"")+' src="'+opts.path+'" type="text/javascript"></script>'):objs;
			}
			result.ready(function(){
				callback?callback(result,opts):"";
			});
		},
		
		batchLoader:function(args,lists,callback){
			var count=0;
			var length=0;
			$.each(lists,function(index, el) {
				length++;
				args.id=!isNaN(index)?null:index;
				args.path=el;
				$.insdep.loader(args,function(result,opts){
					if (++count === length) {
				      	callback?callback():"";
				    }
				});
			});
		},
		plus:function(target,args){
			var pointer = this;
			var res = 0;
			return new Promise(function(resolve) {

				pointer.loader({

		            id:"insdep-plus-"+target,
		            path:$.insdep.config.path+"plus/"+target+"/module.js"

		        },function(){

		        	var callback = new Function('target','args','return $.insdep.plus.'+target+'(target,args)');
					resolve(callback(null,args));

		    	});/*loader*/

	    	});/*end Promise*/
		}
	};

	
	$.insdep.theme={
		set:{
			header:{
				height:50
			},
			console:{
				object:".theme-console",
				instance:null
			},
			menu:{
				object:".theme-left-menu",
				switchButton:".theme-left-menu-switch",
				width:200,
				minWidth:50,
				switch:true, /*true 未缩进，fasle缩进*/
				switchInstance:null
			},
			style:{
				path:""
			}
		},
		console:function(){
			this.set.console.instance=$(this.set.console.object).panel({border:false});
		},

		menuOptions:function(objs){
			var d={
				iconCode:"",
				iconShow:true,
				show:true,
				href:"",
				selected:false
			};
			
			
			var attr=objs.attr("data-options");
			    attr=$.extend(true,d,(typeof(attr)!="undefined"?(new Function("return {"+attr+"}"))():{}));

			    attr.href?objs.attr("href",attr.href):"";
			    attr.selected?objs.addClass('hover'):"";

			if(objs.next("dd").length){/*如果是dt*/
				if(attr.show){
					objs.next("dd").removeClass("menu-open-hide");
					objs.addClass('menu-open-arrows');
					objs.removeClass('menu-close-arrows');
				}else{
					objs.next("dd").addClass("menu-open-hide");
					objs.removeClass('menu-open-arrows');
					objs.addClass('menu-close-arrows');
				}
			}

			var html="";
				if(attr.iconCode){
					html=html+"<div class='menu-icons"+(attr.iconShow?"":" hide")+"'>"+attr.iconCode+"</div>";
				}

				html=html+"<div class='menu-caption'>"+objs.html()+"</div>";
				objs.html(html);
		},

		menuAction:function(obj,event){
			var pointer=this;
			$(this.set.menu.object+" *").removeClass('hover');
			obj.addClass('hover');

			if(!pointer.set.menu.switch){
				/*查找祖元素，如果没有标记，那么添加标记，反之则不添加*/
				var ancestor=obj.parentsUntil(".theme-left-mini-menu");
				var instance=ancestor[ancestor.length-1];
					pointer.set.menu.switchInstance=pointer.set.menu.switchInstance!=null?instance:null;
					$(instance).children("dt").addClass('hover');
					
			}

			var href=obj.attr("href");
			if(typeof(href)!="undefined"){
				$(this.set.console.object).panel({"href":href});
			}
			

		},
		menuAttribute:function(data){
			var opts = [];//data-options 属性
	        var html = [];//html 属性

	        data.href?html.push("href='"+data.href+"'"):"";
	        data.selected?html.push("class='hover'"):"";

	        data.show==false?opts.push("show:"+data.show):"";
	        data.iconCode?opts.push('iconCode:"'+data.iconCode+'"'):"";
	        data.iconShow?opts.push('iconShow:"'+data.iconShow+'"'):"";

	        return " data-options='"+opts.join(",")+"' "+html.join(" ");
		},
		/*动态创建菜单*/
		menuCreate:function(tree){
			var pointer=this;
			var parent = false;//本级是否为最终级别
	        var html = '';//html文本
	        //判断本级菜单是否是父菜单
	        $.each(tree,function(i,o){
	            if(o.children){
	                parent = true;
	                return false;

	            }
	        });

	        //循环生成树结构
	        $.each(tree,function(i,o){
	            if(parent){
	                html += "<dl>"
	                html += "<dt ";
	                html += pointer.menuAttribute(o);
	                html += ">"
	                html += o.text;
	                html += "</dt>"
	                if(o.children){
	                    html += "<dd>"
	                    html += "<ul>"
	                    html += pointer.menuCreate(o.children);//如果该项有子菜单则递归
	                    html += "</ul>"
	                    html += "</dd>"
	                }
	                
	                html += "</dl>"
	            }else{
	                html += "<li";
	                html += pointer.menuAttribute(o);
	                html += ">"+o.text+"</li>"  
	            }
	        });
	        return html;
		},
		/*菜单加载*/
		menuLoader:function(){

			var pointer=this;

			var d={
				href:""
			};

			var opt = $(pointer.set.menu.object).attr("data-options");
				opt = $.extend(true,d,(typeof(opt)!="undefined"?(new Function("return {"+opt+"}"))():{}));


			if(opt.href){
				$.insdep.ajax({
					url:opt.href,
					dataType:"json",
					success:function(data){
						//try{
							//var tree=(new Function("return " + data))();
							var html=pointer.menuCreate(data);
							$(pointer.set.menu.object).html(html);
							pointer.menuInit();
						//}catch(e) {
							//console.error(data);
						//}
						
					}
				});
			}else{
				pointer.menuInit();
			}



		},
		/*菜单初始化*/
		menuInit:function(){
			var pointer=this;
			$(pointer.set.menu.object+" dl,.theme-inside-left-menu dl").each(function(){

			    var objs=$(this).children("dt");
			    var node=$(this).children("dd");
			    var list=$(this).find("li");

			    node.length==0?objs.css("background-image","none"):"";

			    pointer.menuOptions(objs);

			    if(node.children("ul").length!=0){ /*如果该dd元素存在ul*/
				  	list.each(function(){
				    	pointer.menuOptions($(this));
				    });  	
			    }

			});

		},
		menuSwitch:function(d){
			var dd=$(d).next("dd");/*邻近的dd元素*/
			var dt=dd.prev("dt");
			var li=dd.find("ul li");
			if(dd.is(":hidden")){
				(li.hasClass("hover")?dt.removeClass('hover'):"");
				dt.addClass('menu-open-arrows');
				dt.removeClass('menu-close-arrows');
	       		dd.removeClass('menu-open-hide');
			}else{
				(li.hasClass("hover")?dt.addClass('hover'):"");
				dt.removeClass('menu-open-arrows');
				dt.addClass('menu-close-arrows');
			    dd.addClass("menu-open-hide");
			}
		},
		init:function(){
			this.set.console.instance.panel('resize',{
				width: "100%",
				height: ($(window).height()-this.set.header.height)+"px"
			});
			$(".theme-left-menu").css({ height:($(window).height()-this.set.header.height-20)+"px"});
		},
		/*监听器*/
		listener:function(){ 

			var pointer=this;
			/*监听框架大小*/
			$(window).resize(function(){
				pointer.resize();
			});
			/*文档加载后激活*/
			$(window).ready(function(){
				$('.theme-header-navigate-combobox').each(function(){ $(this).combo('panel').panel({cls:"theme-header-navigate-combobox-panel"});});

				/*监听菜单伸缩*/
				$(pointer.set.menu.switchButton).on('click',function(event) {

					if(pointer.set.menu.switch){

						$(pointer.set.menu.object+" dl dd").addClass('theme-left-mini-hide');

						$(".theme-left-layout").css({ width:(pointer.set.menu.minWidth-1)+"px"});
						$(".theme-right-layout").css({ left:pointer.set.menu.minWidth+"px"});

						$(".theme-left-logo").addClass('theme-left-mini-logo');
						$(pointer.set.menu.object).addClass('theme-left-mini-menu');
						
						/*查找祖元素，如果没有标记，那么添加标记，反之则不添加*/
						var ancestor=$('.theme-left-mini-menu .hover').parentsUntil(".theme-left-mini-menu");
							console.log(ancestor);
							pointer.set.menu.switchInstance=ancestor[ancestor.length-1];
							if($(pointer.set.menu.switchInstance).children("dt").is(".hover")){
								pointer.set.menu.switchInstance=null;
							}else{
								$(pointer.set.menu.switchInstance).children("dt").addClass('hover');
							}


						pointer.set.menu.switch=false;
					}else{
						$(pointer.set.menu.object+" dl dd").removeClass('theme-left-mini-hide');

						$(".theme-left-layout").css({ width:(pointer.set.menu.width-1)+"px"});
						$(".theme-right-layout").css({ left:pointer.set.menu.width+"px"});

						$(".theme-left-logo").removeClass('theme-left-mini-logo');
						$(pointer.set.menu.object).removeClass('theme-left-mini-menu');

						/*如果祖元素对象存在的话，那么删除标记，反之则不操作*/
						if(pointer.set.menu.switchInstance!=null){
							$(pointer.set.menu.switchInstance).children("dt").removeClass('hover');
							pointer.set.menu.switchInstance=null;
						}

						pointer.set.menu.switch=true;
					}
					pointer.resize();
					
				});

				/*未缩进状态下，监听菜单dt点击是否隐藏*/
				$(pointer.set.menu.object).on("click","dl dt",function(event) {
					if(pointer.set.menu.switch){
						pointer.menuSwitch(this);
					}
				});
				/*缩进状态下，监听菜单dt点击是否隐藏*/
				$(pointer.set.menu.object).on("click","dl dd dl dt",function(event) {
					if(!pointer.set.menu.switch){
						pointer.menuSwitch(this);
					}
				});

				/*监听菜单被点击事件*/
				$(pointer.set.menu.object).on("click","dl dt",function(event) {
					var t=$(this);
					(!t.next("dd").find("ul li").length > 0?pointer.menuAction(t,event):"");
				});
				$(pointer.set.menu.object).on("click","dl dd ul li",function(event) {
					pointer.menuAction($(this),event);
				});
			});


		},
		loader:function(){
			this.console();
			this.init();
			this.menuLoader();
			this.listener();
		},

		resize:function(){
			this.init();
		},

		operate:function(c) {
			var c = (typeof c == 'string'?{"href":c}:c);
			var d = {
					object:".theme-console",
					module:"panel",
					href:"",
					method:"post",
					queryParams:{}
				};
			var opts = $.extend(true,d,c);
			switch(opts.module)
			{
			case "tab":
				break;
			case "window":
				var e={
	               id:"temp-window",
	               href:"",
	               cache:false,
	               width : 680,
	               height : 550,
	               modal : true,
	               title:"",
	               border:false,
	               collapsible:false,
	               minimizable:false,
	               maximizable:false,
	               queryParams:"",
	               onClose:function() {
	                  $(this).window('destroy');
	               },
	               buttons:[]
				};
				opts=$.extend(true,e,opts);

			  	$('<div/>').window(opts);
			  break;
			case "panel":
			default:
				$(opts.object).panel({    
					href:opts.href,
					cache:false,
					method:opts.method,
					queryParams:opts.queryParams?opts.queryParams:{},    
					onLoad:function(){},
					onBeforeLoad:function(){$(this).panel('clear');},
					onDestroy:function(){}
				});
			}

		},

		href:function(c,s){
			var opts = $.extend(true,{"href":c},(s?s:{}));
			this.operate(opts);
		},

		window:function(c){
			var d = { module:"window"};
			var opts = $.extend(true,d,c);
			this.operate(opts);
		},

		windowClose:function(c){
			$("#"+(c?c:"temp-window")).window('destroy');
		},

		style:function(n){
			if(n!=undefined||n!=""||n!=null){
				var id="insdep-themem-switch-style";
				var objs=$("#"+id);
				if(objs.length==0){
					$("head").append('<link id="'+id+'" href="" rel="stylesheet" type="text/css">');
				}
				console.log(this.set.style.path+"plus-style-"+n+".css");
				objs.attr("href",this.set.style.path+"plus-style-"+n+".css");
			}
		}


	};
	$.fn.insdep=function(target,args){
		var pointer=this;
		var res = 0;

		return new Promise(function(resolve) {
			$.insdep.loader({

	            id:"insdep-plus-"+target,
	            path:$.insdep.config.path+"plus/"+target+"/module.js"

	        },function(){

	        	var callback = new Function('target','args','return $.insdep.plus.'+target+'(target,args)');
				resolve(callback(pointer,args));

	    	});/*loader*/
	    	
    	});/*end Promise*/
	};
	$.insdep.application={};
	




})(jQuery);


;(function(global,undefined) {
    "use strict" 
    var $in;
    var insdep={
    	config:{},
		is:{
			json:function(t){
				return typeof t == "object" && t.constructor == Object;
			}
		},
		get:{
			fileinfo:function(f){
				var p = f.lastIndexOf("/")*1;
				var n = f.substring(p+1);
    			return {"name":n.replace(/\.\w+$/,''),"extension":n.replace(/.+\./,""),"path":f.substring(0,f.lastIndexOf('/')),"fullname":n,"fullpath":f};
			},
			locationPath:function(){
  				return (this.fileinfo(document.getElementsByName("insdep")[0].src).path)+"/";
			}
		},
		extend:function(d, s){
			for (var k in d) {
				if (s[k] === undefined) {
					s[k] = d[k];
					continue;
				}
				this.is.json(d[k])?this.extend(d[k], s[k]):"";
			}
			return s;
		},


		ajax:function(c){
			var d={
				url:"",
				async:true,//true异步请求,false同步请求,注：同步请求将锁住浏览器，用户其它操作必须等待请求完成才可以执行
				cache:false,
				type:"POST",
				dataType:"html",
				beforeSend:function(){},
				complete:function(){}
			};
			var n=$.extend(true,d,c);
			n.async?$.ajax(n):$.when($.insdep.ajax_async(n)).done(n.success?n.success:function(data){
	            return data;
	        });
		},
		ajax_async:function(c){
			var d = $.Deferred();
			var n=$.extend(true,c,{
				success: function(r){
					d.resolve(r);
				}
			});
			$.ajax(n);
			return d.promise();
		}
	};
    $in = (function(){ return this || (0, eval)('this'); }());
    !('insdep' in $in) && ($in.insdep = insdep);
}());