Ext.data.JsonP.gantt_constraints({"guide":"<h1 id='gantt_constraints-section-constraints'>Constraints</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/gantt_constraints-section-intro'>Intro</a></li>\n<li><a href='#!/guide/gantt_constraints-section-api-details-and-asynchronous-behavior'>API details and asynchronous behavior</a></li>\n</ol>\n</div>\n\n<h2 id='gantt_constraints-section-intro'>Intro</h2>\n\n<p>When working with tasks in a large project schedule, some tasks usually have date constraints attached to them. For example,\nSanta Claus must finish delivering all gifts before end of Christmas (a Finish-No-Later-Than constraint).</p>\n\n<p>Ext Gantt supports six types of task constraints:</p>\n\n<ul>\n<li>Must-Start-On (alias 'muststarton')</li>\n<li>Must-Finish-On (alias 'mustfinishon')</li>\n<li>Start-No-Earlier-Than (alias 'startnoearlierthan')</li>\n<li>Start-No-Later-Than (alias 'startnolaterthan')</li>\n<li>Finish-No-Earlier-Than (alias 'finishnoearlierthan')</li>\n<li>Finish-No-Later-Than (alias 'finishnolaterthan')</li>\n</ul>\n\n\n<p>Each of the constraints listed above is defined by a type (a string) and a target date. Therefore, two new fields have been added to the Task model class - \"ConstraintType\" and \"ConstraintDate\".\nIn your data, you simply set these two fields to define your task constraints. Example task with a \"Must-Start-On\" constraint:</p>\n\n<pre><code>{\n    \"Id\"                : 123,\n    \"leaf\"              : true,\n    \"Name\"              : \"Some Task\",\n    \"Duration\"          : 10,\n    \"PercentDone\"       : 50,\n    \"ConstraintType\"    : \"muststarton\",\n    \"ConstraintDate\"    : \"2010-01-18\",\n    \"StartDate\"         : \"2010-01-18\"\n}\n</code></pre>\n\n<p>As you see, the constraint is defined and \"satisfied\" since the task starts on the same date as the constraint date. To let your users\ndefine and change constraints, simply include the two constraint columns and enable cell editing.</p>\n\n<pre><code>var gantt = new <a href=\"#!/api/Gnt.panel.Gantt\" rel=\"Gnt.panel.Gantt\" class=\"docClass\">Gnt.panel.Gantt</a>({\n    columns       : [\n        {\n            xtype     : 'namecolumn'\n        },\n        {\n            xtype : 'constrainttypecolumn'\n        },\n        {\n            xtype : 'constraintdatecolumn'\n        }\n    ],\n\n    plugins : 'cellediting',\n    ...\n});\n</code></pre>\n\n<p>Now if the user modifies a constraint, or the task start date, end date or duration - a prompt will be shown presenting the user\nwith the following options:</p>\n\n<ul>\n<li>Cancel the change and do nothing</li>\n<li>Remove the constraint</li>\n<li>Move the task to satisfy the constraint</li>\n</ul>\n\n\n<p><p><img src=\"\" alt=\"\" width=\"\" height=\"\"></p></p>\n\n<p>If the user checks the \"Don't ask again\" checkbox and hits the Ok-button, the same action will be applied to all future constraints violations. (Note: This\nflag is not persisted during page reloads).</p>\n\n<p>You can of course also change a constraint manually using the <a href=\"#!/api/Gnt.model.Task-method-setConstraint\" rel=\"Gnt.model.Task-method-setConstraint\" class=\"docClass\">Task API</a>. If a constraint is violated by your change, the\nconstraint resolution window will popup to allow the user to take the correct action.</p>\n\n<pre><code>var task = taskStore.getNodeById(1);\n\ntask.setStartDate(new Date(2014, 1, 1);\n\n// Constraint already satisfied\ntask.setConstraint('muststarton', new Date(2014, 1, 1);\n\n// Will show the constraint resolution window, since the constraint is no longer fulfilled\ntask.setStartDate(new Date(2014, 1, 2);\n</code></pre>\n\n<p>The constraint information can also be edited in the <a href=\"#!/api/Gnt.plugin.TaskEditor\" rel=\"Gnt.plugin.TaskEditor\" class=\"docClass\">Gnt.plugin.TaskEditor</a> window, under the Advanced tab.</p>\n\n<h2 id='gantt_constraints-section-api-details-and-asynchronous-behavior'>API details and asynchronous behavior</h2>\n\n<p>Constraints verification is now built-in into the Gantt data layer. Regular methods that affect the start or end date of a task\n(like <code>setStartDate/setDuration</code> etc) now check for possible constraint conflicts and allow a user to resolve them. Since receving user\ninput to such a conflict resolution is not synchronous, all such methods has been made asynchronous in the general case. These methods all accept a\ncallback, which will be called after all the changes caused by the method has completed. This also includes changes in the positions of any dependent tasks.\nIf constraints are not used, all methods remain synchronous so backward compatibility is fully preserved.</p>\n\n<p>Every time a constraint conflict happens, a <a href=\"#!/api/Gnt.data.TaskStore-event-constraintconflict\" rel=\"Gnt.data.TaskStore-event-constraintconflict\" class=\"docClass\">Gnt.data.TaskStore.constraintconflict</a> event is fired by the task store.</p>\n","title":"Task constraints"});